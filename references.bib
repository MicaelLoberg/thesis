@inproceedings{DBLP:conf/sfm/BrandauerCCFJPT15,
  author    = {Stephan Brandauer and
               Elias Castegren and
               Dave Clarke and
               Kiko Fernandez{-}Reyes and
               Einar Broch Johnsen and
               Ka I Pun and
               Silvia Lizeth Tapia Tarifa and
               Tobias Wrigstad and
               Albert Mingkun Yang},
  title     = {Parallel Objects for Multicores: {A} Glimpse at the Parallel Language
               Encore},
  booktitle = {Formal Methods for Multicore Programming - 15th International School
               on Formal Methods for the Design of Computer, Communication, and Software
               Systems, {SFM} 2015, Bertinoro, Italy, June 15-19, 2015, Advanced
               Lectures},
  pages     = {1--56},
  year      = {2015},
  crossref  = {DBLP:conf/sfm/2015},
  url       = {https://doi.org/10.1007/978-3-319-18941-3_1},
  doi       = {10.1007/978-3-319-18941-3_1},
  timestamp = {Wed, 22 Nov 2017 09:15:20 +0100},
  biburl    = {http://dblp.org/rec/bib/conf/sfm/BrandauerCCFJPT15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@proceedings{DBLP:conf/sfm/2015,
  editor    = {Marco Bernardo and
               Einar Broch Johnsen},
  title     = {Formal Methods for Multicore Programming - 15th International School
               on Formal Methods for the Design of Computer, Communication, and Software
               Systems, {SFM} 2015, Bertinoro, Italy, June 15-19, 2015, Advanced
               Lectures},
  series    = {Lecture Notes in Computer Science},
  volume    = {9104},
  publisher = {Springer},
  year      = {2015},
  url       = {https://doi.org/10.1007/978-3-319-18941-3},
  doi       = {10.1007/978-3-319-18941-3},
  isbn      = {978-3-319-18940-6},
  timestamp = {Wed, 24 May 2017 08:30:03 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/sfm/2015},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Backus59,
    author = {Backus, John W.},
    booktitle = {IFIP Congress},
    citeulike-article-id = {9946546},
    keywords = {regex},
    pages = {125--131},
    posted-at = {2011-10-26 08:02:54},
    priority = {0},
    title = {{The syntax and semantics of the proposed international algebraic language of the Zurich ACM-GAMM Conference}},
    year = {1959}
}

@InProceedings{10.1007/978-3-642-25271-6_8,
author="Johnsen, Einar Broch
and H{\"a}hnle, Reiner
and Sch{\"a}fer, Jan
and Schlatte, Rudolf
and Steffen, Martin",
editor="Aichernig, Bernhard K.
and de Boer, Frank S.
and Bonsangue, Marcello M.",
title="ABS: A Core Language for Abstract Behavioral Specification",
booktitle="Formal Methods for Components and Objects",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="142--164",
abstract="This paper presents ABS, an abstract behavioral specification language for designing executable models of distributed object-oriented systems. The language combines advanced concurrency and synchronization mechanisms for concurrent object groups with a functional language for modeling data. ABS uses asynchronous method calls, interfaces for encapsulation, and cooperative scheduling of method activations inside concurrent objects. This feature combination results in a concurrent object-oriented model which is inherently compositional. We discuss central design issues for ABS and formalize the type system and semantics of Core ABS, a calculus with the main features of ABS. For Core ABS, we prove a subject reduction property which shows that well-typedness is preserved during execution; in particular, ``method not understood'' errors do not occur at runtime for well-typed ABS models. Finally, we briefly discuss the tool support developed for ABS.",
isbn="978-3-642-25271-6"
}

@techreport{scala-overview-tech-report,
  added-at = {2009-01-05T14:22:57.000+0100},
  author = {Odersky, Martin and al.},
  biburl = {https://www.bibsonomy.org/bibtex/2bf283793321b856bcb6613c10508f7c3/sac},
  description = {Martin Odersky's Papers: An Overview of the Scala Programming Language},
  institution = {EPFL Lausanne, Switzerland},
  interhash = {668a932eb87ae21bcd92529b24b8c614},
  intrahash = {bf283793321b856bcb6613c10508f7c3},
  keywords = {fp imported martin odersky scala semainar},
  number = {IC/2004/64},
  timestamp = {2009-01-05T14:22:57.000+0100},
  title = {An Overview of the Scala Programming Language},
  year = 2004
}

@misc{Lundin930151,
   author = {Lundin, Gustav},
   institution = {Uppsala University, Department of Information Technology},
   pages = {34},
   school = {Uppsala University, Department of Information Technology},
   title = {Pattern Matching in Encore},
   series = {IT},
   number = {16021},
   abstract = {Encore is a young object-oriented programming language. The standard object-oriented model which embraces encapsulation works well for many kinds of problems but not all; it does not perform well when the algorithm inherently demands many objects to be decomposed at once. To address the need for an elegant way to write programs that solve such problems we have extended Encore with a pattern matching construct capable of decomposing objects. This thesis recounts how we designed and implemented pattern matching in Encore and presents some examples of how it can be used. We found that for problems that are not well suited for fully encapsulated objects, pattern matching leads to much more concise and clean code. However, this comes at the cost of additional run-time. },
   year = {2016}
}

@article{Boer:2017:SAO:3145473.3122848,
 author = {Boer, Frank De and Serbanescu, Vlad and H\"{a}hnle, Reiner and Henrio, Ludovic and Rochas, Justine and Din, Crystal Chang and Johnsen, Einar Broch and Sirjani, Marjan and Khamespanah, Ehsan and Fernandez-Reyes, Kiko and Yang, Albert Mingkun},
 title = {A Survey of Active Object Languages},
 journal = {ACM Comput. Surv.},
 issue_date = {November 2017},
 volume = {50},
 number = {5},
 month = oct,
 year = {2017},
 issn = {0360-0300},
 pages = {76:1--76:39},
 articleno = {76},
 numpages = {39},
 url = {http://doi.acm.org/10.1145/3122848},
 doi = {10.1145/3122848},
 acmid = {3122848},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Programming languages, active objects, actors, concurrency, distributed systems},
}

